---

name : Upload Repo updates to S3 Bucket
on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  s3_sync:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Remove .git* files from cloned repo before syncing to S3 bucket
        run: rm -rf .git*

      # In order for s3_sync's `delete` to not delete the TF-generated view-count.js file (which is not in our repo)
      # and the index.html file (which was updated by Terraform to import the view-count.js file),
      # we must first download them from the S3 bucket before we sync the cloned repo.
      - name: Download TF-generated JS & sync repo to S3 bucket using Ansible
        id: s3_sync
        run: |
          aws s3 cp s3://${{ secrets.S3_SITE_BUCKET }}/assets/js/view-count.js ./assets/js/view-count.js
          sed -Ei 's/^((\s+)<\/main>)/\1\n\n\2<!-- Inserted by Terraform \/ GitHub Actions -->\n\2<script src=".\/assets\/js\/view-count.js"><\/script>/' index.html

          ansible localhost -c local -e "ansible_python_interpreter=/usr/bin/python3.12" -m community.aws.s3_sync \
          -a "bucket=${{ secrets.S3_SITE_BUCKET }} file_root='.' file_change_strategy='checksum' delete=true" | tee /tmp/ansible.log
          set +e
          grep -E '^\s+\"uploads\":\s+\[\]$' /tmp/ansible.log
          echo "uploaded=$(echo $?)" >> $GITHUB_OUTPUT
          set -e


      - name: Invalidate CloudFront distribution if there are newly uploaded files
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths '/*'
        if: steps.s3_sync.outputs.uploaded == '1'